# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: juhui
# "service" is the name of this project. This will also be added to your AWS resource names.
service: authService

provider:
  name: aws
  runtime: nodejs22.x
  # region: ap-southeast-2 us-east-1일 경우 안 적었을때 자동 배치
  environment:
    CLIENT_ID: ${ssm:/CLIENT_ID} # securely fetch from the parameters store
    REGION: "us-east-1"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:Query
      Resource:
        - "arn:aws:dynamodb:us-east-1:610420546744:table/Users"

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table # Defined a dynamodb table resource
      Properties:
        TableName: Users # name of the table were users are going to be stored
        BillingMode: PAY_PER_REQUEST # Automaticaly scales read/write capacity base on usage
        AttributeDefinitions:
          - AttributeName: userId # The partition key(unique identifier for each user)
            AttributeType: S # "s" means String data types
        KeySchema:
          - AttributeName: userId # Defined userId as the primary key
            KeyType: HASH # HASH indicates its's the partition key

functions:
  signUp:
    handler: handlers/signUp.signUp
    events:
      - httpApi:
          path: /sign-up
          method: post
  confirmSignUp:
    handler: handlers/confirmSignUp.confirmSignUp
    events:
      - httpApi:
          path: /confirm-sign-up
          method: post
  signIn:
    handler: handlers/signIn.signIn
    events:
      - httpApi:
          path: /sign-in
          method: post
  signOut:
    handler: handlers/signOut.signOut
    events:
      - httpApi:
          path: /sign-out
          method: post
